ASPNETCORE_HOSTINGSTARTUPASSEMBLIES=OpenTelemetry.AutoInstrumentation.AspNetCoreBootstrapper
#要啟用 log 自動收集的話，這邊必須設定為 0，不然會發生 log 重複輸出的問題
CORECLR_ENABLE_PROFILING=0
CORECLR_PROFILER={918728DD-259F-4A6A-AC2B-B85E1B658318}
# 這邊是因為 repo 中的 web api 都是用 aspnet:7.0-bullseye-slim 作為基礎容器，如果用的是 aspnet:7.0-alpine 的話就必須換成註解的這行
#CORECLR_PROFILER_PATH=/otel-dotnet-auto/linux-musl-x64/OpenTelemetry.AutoInstrumentation.Native.so
CORECLR_PROFILER_PATH=/otel-dotnet-auto/linux-x64/OpenTelemetry.AutoInstrumentation.Native.so
DOTNET_ADDITIONAL_DEPS=/otel-dotnet-auto/AdditionalDeps
DOTNET_SHARED_STORE=/otel-dotnet-auto/store
DOTNET_STARTUP_HOOKS=/otel-dotnet-auto/net/OpenTelemetry.AutoInstrumentation.StartupHook.dll
OTEL_DOTNET_AUTO_HOME=/otel-dotnet-auto
#要啟用 log 的話，就不能使用 serilog & 前面的 CORECLR_ENABLE_PROFILING 必須設定為 0
OTEL_DOTNET_AUTO_LOGS_ENABLED=true
OTEL_DOTNET_AUTO_LOGS_INCLUDE_FORMATTED_MESSAGE=true
OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES=dotnet-webapi
OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES=dotnet-webapi
OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector.domain:4317
OTEL_EXPORTER_OTLP_PROTOCOL=grpc
OTEL_RESOURCE_ATTRIBUTES=service.version=ghcr.io/yuchia-wei/dotnet-webapi-lab:main, deployment.environment=Production
OTEL_SERVICE_NAME=dotnet-webapi
Logging__OpenTelemetry__IncludeScopes=true
Logging__Console__FormatterName=Simple
Logging__Console__FormatterOptions__SingleLine=true

#dotnet runtime env
LANG=zh_TW.UTF-8
TZ=Asia/Taipei
#這個參數也可以用 docker run 時指定，請自行依據使用情境進行調整
ASPNETCORE_ENVIRONMENT=Production